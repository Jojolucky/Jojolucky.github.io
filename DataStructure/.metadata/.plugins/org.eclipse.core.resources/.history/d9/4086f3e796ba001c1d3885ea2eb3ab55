package queue;

import java.util.Iterator;

// 队的顺序为  先进先出
public class ArrayQueue {
	private int maxSize; // 队的大小
	private int front; //队的头部元素
	private int rare; // 队的尾部元素
	private int[] arr; // 用于存储数据，模拟队列
	
	//创造队列的构造器
	public ArrayQueue(int arrMaxSize) {
		maxSize = arrMaxSize;
		front = -1;  // 初始化： 指向队列头的前一个位置
		rare = -1;  // 初始化： 指向队列尾的位置（队列的最后一个元素）
		arr = new int[maxSize];
	}
	
	// 判断队列是否是满的
	public boolean isFull() {
		return rare == maxSize - 1;
	}
	//  判断队列是否是空的
	public boolean isEmpty() {
		return rare == front;
	}
	// 添加数据到队列
	public void addQueue(int n) {
		if(isFull()) {
			System.out.println("The queue is full. You can not add elements anymore.");
			return;
		}
		rare++;// 把rare向后移位
		arr[rare] = n;
	}
	// 提取队列中的数据
	public int getQueue(int n) {
		if(isEmpty()) {
			throw new RuntimeException("The queue is empty. you can not get any elements here");
		}
		front++;
		return arr[front];
	}
	// 显示数据
	public void showQueue() {
		if(isEmpty()) {
			System.out.println("The queue is empty.");
			return;
		}		
		for (int i = 0; i < arr.length; i++) {
			
		}
		
		
		
		
	}
	
	
}
